// Mocks generated by Mockito 5.3.2 from annotations
// in spotiplay/test/use_cases/album/get_new_releases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:spotiplay/models/album.dart' as _i5;
import 'package:spotiplay/models/album_saved.dart' as _i6;
import 'package:spotiplay/models/repository/music.dart' as _i3;
import 'package:spotiplay/models/spotify_list.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSpotifyList_0<T> extends _i1.SmartFake
    implements _i2.SpotifyList<T> {
  _FakeSpotifyList_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RepositoryMusic].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepositoryMusic extends _i1.Mock implements _i3.RepositoryMusic {
  MockRepositoryMusic() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.SpotifyList<_i5.Album>> getNewReleases(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNewReleases,
          [index],
        ),
        returnValue: _i4.Future<_i2.SpotifyList<_i5.Album>>.value(
            _FakeSpotifyList_0<_i5.Album>(
          this,
          Invocation.method(
            #getNewReleases,
            [index],
          ),
        )),
      ) as _i4.Future<_i2.SpotifyList<_i5.Album>>);
  @override
  _i4.Future<_i2.SpotifyList<_i6.AlbumSaved>> getSavedAlbums(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedAlbums,
          [index],
        ),
        returnValue: _i4.Future<_i2.SpotifyList<_i6.AlbumSaved>>.value(
            _FakeSpotifyList_0<_i6.AlbumSaved>(
          this,
          Invocation.method(
            #getSavedAlbums,
            [index],
          ),
        )),
      ) as _i4.Future<_i2.SpotifyList<_i6.AlbumSaved>>);
}
